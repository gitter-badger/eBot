{
  "name": "srcds-tools",
  "version": "0.2.0",
  "author": {
    "name": "Ryan J Miller",
    "email": "captaintrek@gmail.com"
  },
  "description": "A set of tools for interacting with Source Dedicated Server",
  "scripts": {
    "test": "make test",
    "test-cov": "make test-cov"
  },
  "main": "index",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/RJMiller/srcds-tools.git"
  },
  "keywords": [
    "srcds",
    "source",
    "source dedicated server",
    "rcon",
    "udp",
    "log",
    "tf2",
    "team fortress 2"
  ],
  "devDependencies": {
    "should": ">=1.2.0",
    "mocha": ">=1.5.0",
    "coffee-script": ">=1.3.3",
    "visionmedia-jscoverage": ">=1.0.0"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.8"
  },
  "gitHead": "ff612b5c6ee5f46f8c1cad93ac943deb429f888c",
  "readme": "srcds-tools\r\n===\r\nA set of tools for interacting with [Source Dedicated Server](https://developer.valvesoftware.com/wiki/Source_Dedicated_Server) in [node.js](http://nodejs.org).\r\n\r\nCurrent version: v0.2.0\r\n\r\n## Documentation\r\n\r\n### RConClient\r\n\r\nFor issuing commands to SRCDS via the [Source RCON Protocol](https://developer.valvesoftware.com/wiki/Source_RCON_Protocol), `srcds-tools` provides the `RConClient` type. Typical usage is as follows:\r\n\r\n```js\r\nvar RConClient = require(\"srcds-tools\").RConClient;\r\n\r\nvar rcon = new RConClient();\r\n\r\nrcon.connect(\"127.0.0.1\", 27015);\r\n\r\nrcon.sendPassword(\"password123\");\r\n\r\nrcon.sendCommand(\"sv_cheats 1\", function (response) {\r\n\r\n\t// Code to be executed when the server responds\r\n\r\n});\r\n```\r\n\r\n### .verbose\r\n\r\nA boolean which, if set to `true`, causes the `RConClient` to output debug information to `console.log()`.\r\n\r\n#### .connect(address, port)\r\n\r\nEstablishes a TCP connection to the game server. The `port` can be passed as a second parameter, or as part of the `address` string. Once `connect()` is called, it is safe to call `sendPassword()` immediately.\r\n\r\n```js\r\nrcon.connect(\"127.0.0.1\", 27015);\r\n\r\n// or\r\n\r\nrcon.connect(\"127.0.0.1:27015\");\r\n```\r\n\r\n#### .sendPassword(password, [callback])\r\n\r\nSends an authentication request to the server using the given `password`. If `RConClient` is able to authenticate successfully, `callback` is invoked. If the server rejects the password, an `RConBadPasswordError` is passed to the callback as the first parameter. The `callback` is optional, but highly advised since sending commands after a failed auth attempt can result in an RCON ban from the server.\r\n\r\n```js\r\nrcon.sendPassword(\"dingbats\", function (error) {\r\n\r\n\tif (error) throw error;\r\n\r\n\tconsole.log(\"Authenticated successfully!\");\r\n\r\n});\r\n```\r\n\r\n#### .sendCommand(command, [callback])\r\n\r\nInstructs the server to execute the specified `command`. The server's response will be passed to `callback` if it is specified. If the RCON password changes, `sendPassword()` will need to be called again or a `RConBadPasswordError` may be thrown.\r\n\r\n```js\r\nrcon.sendCommand(\"_restart\", function (response) {\r\n\r\n\tconsole.log(\"Server says: \" + response);\r\n\r\n});\r\n```\r\n\r\n#### .setTimeout(duration)\r\n\r\nChanges the maximum duration (in milliseconds) that `RConClient` will wait for a response before throwing an `RConTimeoutError`. Default is `1000` (1 second). Calling this method is usually unneccessary unless you want quicker/slower timeouts.\r\n\r\n```js\r\n// Future requests will time out in 1/2 second\r\nrcon.setTimeout(500);\r\n```\r\n\r\n## Utilities\r\n\r\nThe `srcds-tools` module also provides a few utilites that can be used for debugging or independently of the module itself. They are located in the `util` directory.\r\n\r\n### RConCLI\r\n\r\n`RConCLI.js` is a simple command-line implementation of `RConClient`. To use it, simply run the file with node.\r\n\r\n```\r\nnode ./util/RConCLI.js\r\n```\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/RJMiller/srcds-tools/issues"
  },
  "homepage": "https://github.com/RJMiller/srcds-tools#readme",
  "_id": "srcds-tools@0.1.2",
  "_shasum": "e47313ce9f67e95f10c1907340b4528a2de2df3e",
  "_from": "git://github.com/Nols1000/srcds-tools.git",
  "_resolved": "git://github.com/Nols1000/srcds-tools.git#ff612b5c6ee5f46f8c1cad93ac943deb429f888c"
}
