var InterfaceManager = require('./InterfaceManager.js');

function PluginManager() {
	
	this.plugins = [];
	this.im 	 = new InterfaceManager();
}

PluginManager.prototype.add = function(plugin) {
	
	if(typeof plugin.id != "undefined"){
		
		plugin.id = this.plugins.length;
		this.plugins.push(plugin);
		
		return plugin.id;
	} else {
		
		return -1;
	}
}

PluginManager.prototype.start = function(id) {
	
	this.plugins[id].start(254 + id, this.im);
	this.plugins[id].on('im', function(im) {
		
		this.im = im;
		this.updateIM();
	}.bind(this));
	
	return 254 + id;
}

PluginManager.prototype.remove = function(id) {
	
	this.plugins.splice(this.stop(id), 1);
}

PluginManager.prototype.stop = function(id) {
	
	var plugin = this.plugins[id];
	
	plugin.stop();
	plugin.__stop();
	
	return id;
}

PluginManager.prototype.updateIM = function() {
	
	this.plugins.forEach(function(plugin, index, array) {
		
		plugin.emit('im', this.im);
	}.bind(this));
}

module.exports = PluginManager;