var EventEmitter = require('events').EventEmitter;
var util = require('util');

function InterfaceManager() {
	
	this.interfaces = [];
	this.names		= [];
}

util.inherits(InterfaceManager, EventEmitter);

InterfaceManager.prototype.add = function(name, intf) {
	
	this.names.push(name);
	this.interfaces.push(intf);
	
	this.emit(name, intf);
}

InterfaceManager.prototype.get = function(name) {
	
	var index = this.names.indexOf(name);
	
	return this.interfaces[index];
}

InterfaceManager.prototype.update = function(name, intf) {
	
	var index = this.names.indexOf(name);
	
	this.interfaces[index] = intf;
	
	this.emit(name, intf);
}

InterfaceManager.prototype.remove = function(name) {
	
	var index = this.names.indexOf(name);
	
	this.interfaces.splice(1, index);
	this.names.splice(1, index);
	
	this.emit(name, null);
}

module.exports = InterfaceManager;